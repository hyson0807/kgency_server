{"mappings":"AAAA;;GAEG;AACH,uBACI,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,CAAC;AAET,sBAA6B;IAC3B,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAC3C,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;CACjB,CAAC;AAEF,sBAA6B;IAC3B,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IAC3C,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,0BAAiC;IAC/B,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IAClD,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,OAAO,CAAC,EAAE,KAAK,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;CACjB,CAAC;AAEF,mBAA0B,cAAc,GAAG,cAAc,GAAG,kBAAkB,CAAC;ACtC/E,0BAAiC;IAC/B,IAAI,EAAE,MAAM,CAAC;IACb,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,MAAM,CAAC,EAAE,OAAO,CAAC;IACjB,OAAO,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAC7B,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB,CAAC;ACPF;IACE,IAAI,EAAE,MAAM,CAAC;IACb,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,MAAM,CAAC,EAAE,OAAO,CAAC;IACjB,OAAO,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAC7B,OAAO,CAAC,EAAE,MAAM,CAAC;gBAEL,SAAS,EAAE,kBAAkB;CAS1C;ACrBD;;GAEG;AACH,qBACI,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,GACJ,IAAI,CAAC;AAET,oBAA2B;IACzB,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACzC,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF,oBAA2B;IACzB,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACzC,QAAQ,EAAE,MAAM,CAAC;IACjB,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;AAEF,wBAA+B;IAC7B,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IACzC,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF,iBAAwB,YAAY,GAAG,YAAY,GAAG,gBAAgB,CAAC;AC9BvE;;GAEG;AACH,sBAA6B;IAC3B;;OAEG;IACH,KAAK,EAAE,MAAM,CAAC;IACd;;OAEG;IACH,WAAW,EAAE,MAAM,CAAC;IACpB;;;;OAIG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB;;OAEG;IACH,OAAO,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;CAC5B,CAAC;AAEF;;GAEG;AACH,wBAA+B;IAC7B;;OAEG;IACH,OAAO,EAAE,MAAM,CAAC;IAChB;;OAEG;IACH,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB;;OAEG;IACH,WAAW,CAAC,EAAE,OAAO,CAAC;IACtB;;;OAGG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC;;OAEG;IACH,OAAO,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IAChE;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB;;OAEG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB;;OAEG;IACH,cAAc,CAAC,EAAE,cAAc,CAAC;IAChC;;OAEG;IACH,OAAO,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;CAC5B,CAAC;AAEF;IACE,OAAO,EAAE,MAAM,CAAC;IAChB,UAAU,CAAC,EAAE,MAAM,CAAC;IACpB,WAAW,CAAC,EAAE,OAAO,CAAC;IACtB,SAAS,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACnC,OAAO,CAAC,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IAChE,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB,cAAc,CAAC,EAAE,cAAc,CAAC;IAChC,OAAO,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;gBAEf,SAAS,EAAE,gBAAgB;CAWxC;AC3FD,aAAoB;IAClB,KAAK,EAAE,MAAM,CAAC;IACd,SAAS,EAAE,MAAM,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;IACpB,eAAe,EAAE,MAAM,CAAC;IACxB,MAAM,EAAE,MAAM,CAAC;IACf,gBAAgB,EAAE,MAAM,CAAC;IACzB,iBAAiB,EAAE,MAAM,CAAC;CAC3B,CAAC;AAEF,2BAA2B,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAElD,sBAA6B;IAC3B,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,GAAG,EAAE,mBAAmB,CAAC;IACzB,OAAO,EAAE,mBAAmB,CAAC;IAC7B,OAAO,EAAE,mBAAmB,CAAC;IAC7B,OAAO,EAAE,mBAAmB,CAAC;IAC7B,OAAO,EAAE,mBAAmB,CAAC;CAC9B,CAAC;AAEF,0BAAiC;IAC/B,SAAS,EAAE,MAAM,CAAC;IAClB,WAAW,EAAE,MAAM,CAAC;IACpB,MAAM,EAAE,MAAM,CAAC;IACf,GAAG,EAAE,MAAM,CAAC;CACb,CAAC;AAEF,yBAAgC;IAC9B,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,WAAkB;IAChB,MAAM,EAAE,iBAAiB,CAAC;IAC1B,KAAK,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;CAClC,CAAC;AAEF,WAAkB,KAAK,CAAC,MAAM,CAAC,CAAC;AAEhC,eAAsB,MAAM,CAAC;AAE7B,aAAoB;IAClB,KAAK,EAAE;QACL,KAAK,EAAE,MAAM,CAAC;QACd,SAAS,EAAE,MAAM,CAAC;QAClB,UAAU,EAAE,MAAM,CAAC;QACnB,WAAW,EAAE,MAAM,CAAC;QACpB,WAAW,EAAE,MAAM,CAAC;QACpB,eAAe,EAAE,MAAM,CAAC;QACxB,MAAM,EAAE,MAAM,CAAC;QACf,gBAAgB,EAAE,MAAM,CAAC;QACzB,iBAAiB,EAAE,MAAM,CAAC;KAC3B,CAAC;IACF,OAAO,EAAE,kBAAkB,CAAC;IAC5B,KAAK,EAAE,kBAAkB,CAAC;IAC1B,GAAG,EAAE,GAAG,CAAC;IACT,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,MAAM,CAAC;IACnB,GAAG,EAAE,GAAG,CAAC;IACT,MAAM,EAAE,MAAM,CAAC;IACf,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,UAAU,EAAE,OAAO,CAAC;IACpB,OAAO,EAAE,OAAO,CAAC;IACjB,SAAS,EAAE,MAAM,CAAC;IAClB,cAAc,EAAE,cAAc,CAAC;IAC/B,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAEF,iBAAwB,MAAM,CAAC;AAE/B,aAAoB;IAClB,SAAS,EAAE,SAAS,CAAC;IACrB,IAAI,EAAE,QAAQ,CAAC;IACf,YAAY,EAAE,MAAM,CAAC;IACrB,eAAe,EAAE,MAAM,CAAA;IACvB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAA;CACpB,CAAA;AAED,kBAAyB;IACvB,YAAY,EAAE,MAAM,CAAC;IACrB,SAAS,EAAE,MAAM,CAAC;IAClB,MAAM,EAAE,UAAU,GAAG,QAAQ,CAAC;IAC9B,IAAI,EAAE,MAAM,CAAC;IACb,MAAM,EAAE,OAAO,CAAC;IAChB,aAAa,EAAE,MAAM,EAAE,CAAA;IACvB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAA;AAED,mBAA0B;IACxB,aAAa,EAAE,MAAM,CAAC;IACtB,SAAS,EAAE,MAAM,CAAC;IAClB,IAAI,EAAE,MAAM,CAAC;IACb,WAAW,EAAE,MAAM,CAAC;IACpB,aAAa,EAAE,MAAM,EAAE,CAAC;IACxB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AC1GF,iCAAwC;IACtC,OAAO,EAAE,MAAM,CAAC;IAChB,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,WAAW,CAAC;IAClB,aAAa,EAAE,MAAM,CAAC;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,MAAM,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;AAEF,4BAAmC;IACjC,KAAK,EAAE,KAAK,CAAC;IACb,cAAc,EAAE,cAAc,CAAC;IAC/B,OAAO,EAAE,kBAAkB,CAAC;IAC5B,KAAK,EAAE,kBAAkB,CAAC;IAC1B,GAAG,EAAE,GAAG,CAAC;IACT,GAAG,EAAE,GAAG,CAAC;IACT,MAAM,EAAE,MAAM,CAAC;IACf,eAAe,EAAE,OAAO,CAAC;IACzB,UAAU,EAAE,OAAO,CAAC;IACpB,SAAS,EAAE,MAAM,CAAC;IAClB,eAAe,EAAE,MAAM,GAAG,IAAI,CAAC;IAC/B,UAAU,EAAE,MAAM,CAAC;IACnB,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;IACpB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,aAAa,CAAC,EAAE,MAAM,CAAC;CACxB,CAAC;AAEF,wBAA+B;IAC7B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,OAAO,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,MAAM,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,aAAa,EAAE,MAAM,CAAC;IACtB,SAAS,EAAE,MAAM,CAAC;IAClB,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACvC,CAAC;AAEF,0BAAiC;IAC/B,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,KAAK,CAAC,gBAAgB,CAAC,CAAC;CACrC,CAAC;AAEF,2BAAkC;IAChC,QAAQ,EAAE,MAAM,GAAG,IAAI,CAAC;IACxB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,KAAK,EAAE,MAAM,CAAC;IACd,WAAW,EAAE,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;CACtC,CAAC;AAEF,mCAA0C;IACxC,OAAO,EAAE,OAAO,CAAC;IACjB,UAAU,EAAE,MAAM,CAAC;IACnB,UAAU,EAAE,KAAK,CAAC;QAChB,SAAS,EAAE,MAAM,CAAC;QAClB,UAAU,EAAE,MAAM,CAAC;KACpB,CAAC,CAAC;CACJ,CAAC;AAEF,yBAAgC;IAC9B,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACpC,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACnC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;CACnC,CAAC;AAEF,8BAA8B;IAC5B,KAAK,EAAE,MAAM,CAAC;IACd,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,GAAG,EAAE,MAAM,CAAC;IACZ,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,6BAAoC;IAClC,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;IACd,iBAAiB,EAAE,MAAM,CAAC;IAC1B,eAAe,EAAE,MAAM,CAAC;IACxB,WAAW,EAAE,KAAK,CAAC;QACjB,IAAI,EAAE,MAAM,CAAC;QACb,OAAO,EAAE,MAAM,CAAC;QAChB,UAAU,EAAE,MAAM,CAAC;QACnB,KAAK,EAAE,MAAM,CAAC;QACd,QAAQ,EAAE,MAAM,CAAC;QACjB,SAAS,EAAE,KAAK,CAAC;YACf,GAAG,EAAE,MAAM,CAAC;YACZ,KAAK,EAAE,MAAM,CAAC;YACd,OAAO,EAAE,MAAM,CAAC;YAChB,KAAK,EAAE,MAAM,CAAC;YACd,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;YAC9C,MAAM,EAAE;gBACN,OAAO,EAAE,MAAM,CAAC;gBAChB,KAAK,EAAE,MAAM,CAAC;aACf,CAAC;YACF,KAAK,EAAE,sBAAsB,CAAC;YAC9B,SAAS,EAAE,sBAAsB,CAAC;YAClC,MAAM,EAAE,sBAAsB,CAAC;SAChC,CAAC,CAAC;QACH,MAAM,EAAE;YACN,OAAO,EAAE,MAAM,CAAC;YAChB,UAAU,EAAE,MAAM,CAAC;YACnB,KAAK,EAAE,MAAM,CAAC;YACd,QAAQ,EAAE,MAAM,CAAC;SAClB,CAAC;QACF,KAAK,EAAE,sBAAsB,CAAC;QAC9B,SAAS,EAAE,sBAAsB,CAAC;QAClC,MAAM,EAAE,sBAAsB,CAAC;KAChC,CAAC,CAAC;IACH,KAAK,EAAE,sBAAsB,CAAC;IAC9B,SAAS,EAAE,sBAAsB,CAAC;IAClC,MAAM,EAAE,sBAAsB,CAAC;IAC/B,eAAe,EAAE,MAAM,CAAC;IACxB,aAAa,EAAE,MAAM,CAAC;IACtB,kBAAkB,EAAE,MAAM,CAAC;IAC3B,mBAAmB,EAAE,MAAM,CAAC;IAC5B,sBAAsB,EAAE,MAAM,CAAC;CAChC,CAAC;AAEF,0BAAiC;IAC/B,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;CACf,CAAC;AAEF,0BAAiC;IAC/B,MAAM,EAAE,MAAM,CAAC;IACf,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;CACjC,CAAC;AAEF,wCAA+C;IAC7C,OAAO,EAAE,OAAO,CAAC;CAClB,CAAC;AAEF,kCAAyC;IACvC,SAAS,EAAE,MAAM,CAAC;IAClB,WAAW,EAAE,MAAM,CAAC;IACpB,QAAQ,EAAE,MAAM,CAAC;IACjB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;IACpB,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;ACtKF;;GAEG;AACH,qBAA4B;IAC1B,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;IACb,aAAa,EAAE,MAAM,CAAC;IACtB,OAAO,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,MAAM,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,SAAS,EAAE,MAAM,CAAC;IAClB,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;CACvC,CAAC;AAEF;;GAEG;AACH,2BAAkC;IAChC,SAAS,EAAE,MAAM,CAAC;IAClB,UAAU,EAAE,MAAM,CAAC;IACnB,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtC,aAAa,EAAE,MAAM,CAAC;CACvB,CAAC;AAEF;;GAEG;AACH,kCAAyC;IACvC;;SAEK;IACL,iBAAiB,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;IAExC;;OAEG;IACH,SAAS,EAAE,oBAAoB,CAAC;IAEhC;;OAEG;IACH,WAAW,CAAC,EAAE,KAAK,CAAC,mBAAmB,CAAC,CAAC;CAC1C,CAAC;AC3CF,4BAA4B;IAC1B,SAAS,EAAE,MAAM,CAAC;IAClB,YAAY,EAAE,MAAM,CAAC;CACtB,CAAC;AAEF,6BAA8B,SAAQ,KAAK;gBAC7B,OAAO,EAAE,MAAM;CAI5B;AAED,wBAAyB,SAAQ,KAAK;gBACxB,OAAO,EAAE,MAAM;CAI5B;AAED,yBAA0B,SAAQ,KAAK;gBACzB,SAAS,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM;CAIpD;AAED;;GAEG;AACH,oCAAqC,SAAQ,KAAK;IAChD,iBAAiB,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;gBAE5B,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC;CAQ5C;AAED,4BAA6B,SAAQ,KAAK;gBAC5B,OAAO,EAAE,MAAM;CAI5B;AEnBD,wBAA+B;IAC7B,EAAE,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,IAAI,CAAC,EAAE,WAAW,CAAC;IACnB,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,cAAc,CAAC,EAAE,OAAO,CAAC;IACzB,YAAY,CAAC,EAAE,kBAAkB,CAAC;IAClC,UAAU,CAAC,EAAE,gBAAgB,CAAC;IAC9B,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACtC,YAAY,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC7B,UAAU,CAAC,EAAE,OAAO,CAAC;CACtB,CAAC;AAiFF,+BAAsC;IACpC,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,KAAK,CAAC,EAAE,MAAM,CAAC;CAChB,CAAC;AAOF,eAAsB;IACpB,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;CACxB,CAAC;AAEF,gBAAuB,OAAO,GAAG,KAAK,GAAG,UAAU,GAAG,KAAK,GAAG,KAAK,CAAC;AAuBpE,sCAA6C;IAC3C,QAAQ,EAAE,MAAM,CAAC;IACjB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAEF,iCAAwC;IACtC,QAAQ,EAAE,MAAM,CAAC;IACjB,WAAW,EAAE,MAAM,CAAC;IACpB,YAAY,EAAE,MAAM,CAAC;IACrB,KAAK,EAAE,MAAM,CAAC;CACf,CAAC;ACxKF;;;;;;;;;;;;;;;;;GAiBG;AACH,mBACI,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,SAAS,GACT,SAAS,GACT,SAAS,GACT,SAAS,GACT,UAAU,GACV,UAAU,GACV,KAAK,GACL,OAAO,CAAC;AAEZ;;GAEG;AACH;IACE;;OAEG;IACH,EAAE,EAAE,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IAE3B;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;OAEG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,IAAI,CAAC,EAAE,WAAW,CAAC;IAEnB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,cAAc,CAAC,EAAE,OAAO,CAAC;IAEzB;;OAEG;IACH,YAAY,CAAC,EAAE,WAAW,CAAC;IAE3B;;OAEG;IACH,UAAU,CAAC,EAAE,SAAS,CAAC;IAEvB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACpB,YAAY,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAE7B;;;OAGG;IACH,UAAU,CAAC,EAAE,MAAM,CAAC;IAEpB;;;OAGG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEtC,UAAU,CAAC,EAAE,OAAO,CAAC;gBAET,SAAS,EAAE,gBAAgB;CAmBxC;AGnJD,yBAAgC;IAC9B,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACpC,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACnC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;CACrC,CAAC;ACNF,8BAAqC;IACnC,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACpC,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACnC,WAAW,EAAE,UAAU,EAAE,CAAC;CAC3B,CAAC;ACLF,+BAAsC;IACpC,QAAQ,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACpC,KAAK,EAAE,MAAM,CAAC;IACd,OAAO,EAAE,MAAM,GAAG,IAAI,GAAG,SAAS,CAAC;IACnC,YAAY,EAAE,WAAW,EAAE,CAAA;CAC5B,CAAC;ACPF;;;;GAIG;AACH,4BAAmC;IACjC,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEF;IACE,SAAS,EAAE,MAAM,CAAC;IAClB,QAAQ,EAAE,MAAM,CAAC;IACjB,SAAS,EAAE,MAAM,CAAC;IAClB,WAAW,EAAE,MAAM,CAAC;IACpB,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,WAAW,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC5B,WAAW,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CAC7B;AAED;;;;;;;;;GASG;AACH,0BAA0B,YAAW,qBAAqB;IACxD,SAAS,EAAE,MAAM,CAAC;IAClB,QAAQ,EAAE,MAAM,CAAC;IACjB,SAAS,EAAE,MAAM,CAAC;IAClB,WAAW,EAAE,MAAM,CAAC;IACpB,gBAAgB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,WAAW,CAAC,EAAE,IAAI,CAAC;IACnB,WAAW,CAAC,EAAE,IAAI,CAAC;gBAEP,SAAS,EAAE,qBAAqB;CAa7C;ACjDD,kCACE,SAAQ,8BAA8B;IACtC,UAAU,EAAE,+BAA+B,CAAC;IAC5C,SAAS,EAAE,MAAM,CAAC;IAClB,WAAW,EAAE,OAAO,CAAC;IACrB,WAAW,EAAE,MAAM,CAAC;IACpB,WAAW,EAAE,MAAM,CAAC;CACrB;ACVD,8CAAqD;IACnD,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACzC,MAAM,EAAE,MAAM,CAAC;IACf,MAAM,CAAC,EAAE,MAAM,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;CACjB,CAAC;AAEF,8CAAqD;IACnD,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACzC,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,OAAO,EAAE,MAAM,CAAC;IAChB,OAAO,EAAE,MAAM,CAAC;CACjB,CAAC;AAEF,8CAAqD;IACnD,IAAI,EAAE,MAAM,CAAC;IACb,QAAQ,EAAE,OAAO,CAAC,eAAe,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IACrE,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,MAAM,CAAC,EAAE,KAAK,CAAC;IACf,OAAO,CAAC,EAAE,KAAK,CAAC;IAChB,OAAO,CAAC,EAAE,KAAK,CAAC;CACjB,CAAC;AAEF,uCACI,sCAAsC,GACtC,sCAAsC,GACtC,sCAAsC,CAAC;AC1B3C;;;;GAIG;AACH,qCAA4C,oBAAoB,CAAC;AAEjE;;;GAGG;AACH,wCAA+C,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAEzE;;;GAGG;AACH,0CACI,MAAM,GACN,MAAM,GACN,OAAO,GACP,WAAW,CAAC;AAEhB;;GAEG;AACH,uCAA8C,SAAS,GAAG,OAAO,CAAC;AAElE;;;;;;GAMG;AACH,mCACI,SAAS,GACT,YAAY,GACZ,UAAU,GACV,UAAU,CAAC;AAEf;;GAEG;AACH,wCAA+C;IAC7C,OAAO,EAAE,OAAO,CAAC;IACjB,QAAQ,EAAE,MAAM,CAAC;IACjB,OAAO,EAAE,MAAM,CAAC;IAChB,WAAW,EAAE,MAAM,CAAC;CACrB,CAAC;AAEF,0CAAiD;IAC/C,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACtB,WAAW,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC5B,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB,CAAC;AAEF,qCAA4C;IAC1C,IAAI,EAAE,KAAK,CAAC;QACV,KAAK,EAAE,MAAM,CAAC;QACd,WAAW,EAAE,MAAM,CAAC;KACrB,CAAC,CAAC;IACH,OAAO,EAAE;QACP,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;QACtB,WAAW,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;KAC7B,CAAC;CACH,CAAC;AAEF;IACE;;OAEG;IACH,IAAI,EAAE,MAAM,CAAC;IAEb;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE1B;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE/B;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,QAAQ,CAAC,EAAE,OAAO,CAAC;IAEnB;;OAEG;IACH,WAAW,EAAE,gCAAgC,CAAC;IAE9C;;OAEG;IACH,aAAa,EAAE,kCAAkC,CAAC;IAElD;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAEtB;;OAEG;IACH,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAEnB;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE/B;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAElC;;OAEG;IACH,YAAY,EAAE,OAAO,CAAC;IAEtB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAExB;;OAEG;IACH,UAAU,CAAC,EAAE,+BAA+B,CAAC;IAE7C;;OAEG;IACH,OAAO,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAE7B;;OAEG;IACH,QAAQ,CAAC,EAAE,KAAK,CAAC,gCAAgC,CAAC,CAAC;IAEnD;;OAEG;IACH,WAAW,CAAC,EAAE,OAAO,CAAC;IAEtB;;OAEG;IACH,YAAY,CAAC,EAAE,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAEtD;;OAEG;IACH,MAAM,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAEvB;;OAEG;IACH,SAAS,CAAC,EAAE,kCAAkC,CAAC;IAE/C;;OAEG;IACH,IAAI,CAAC,EAAE,6BAA6B,CAAC;IAErC;;OAEG;IACH,UAAU,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;;;;;OAMG;IACH,MAAM,EAAE,2BAA2B,CAAC;CACrC;AAED;;;;GAIG;AACH,mCAAmC,YAAW,8BAA8B;IAC1E,IAAI,EAAE,MAAM,CAAC;IACb,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC1B,cAAc,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC/B,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,QAAQ,CAAC,EAAE,OAAO,CAAC;IACnB,WAAW,EAAE,gCAAgC,CAAC;IAC9C,aAAa,EAAE,kCAAkC,CAAC;IAClD,KAAK,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACtB,EAAE,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACnB,cAAc,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC/B,iBAAiB,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAClC,YAAY,EAAE,OAAO,CAAC;IACtB,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACxB,UAAU,CAAC,EAAE,+BAA+B,CAAC;IAC7C,OAAO,CAAC,EAAE,WAAW,EAAE,CAAC;IACxB,YAAY,CAAC,EAAE,+BAA+B,EAAE,CAAC;IACjD,MAAM,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,SAAS,CAAC,EAAE,kCAAkC,CAAC;IAC/C,IAAI,CAAC,EAAE,6BAA6B,CAAC;IACrC,UAAU,EAAE,MAAM,CAAC;IACnB,WAAW,CAAC,EAAE,OAAO,CAAC;IACtB,QAAQ,CAAC,EAAE,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACnD,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,MAAM,EAAE,2BAA2B,CAAC;IAEpC;;OAEG;IACH,WAAW,EAAE,IAAI,CAAC;IAElB;;OAEG;IACH,WAAW,EAAE,IAAI,CAAC;gBAGhB,SAAS,EAAE,8BAA8B,GAAG,wBAAwB;CAkCvE;ACpRD;;;GAGG;AACH;IACE;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE9B;;;OAGG;IACH,eAAe,CAAC,EAAE,OAAO,CAAC;IAE1B;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;;OAGG;IACH,eAAe,CAAC,EAAE,OAAO,CAAC;CAC3B;AChBD;IACE,KAAK,EAAE,MAAM,CAAC;IACd,YAAY,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;IAC3C,QAAQ,EAAE,MAAM,CAAC;IACjB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;CACxB;ACXD,yCACI;IACE,EAAE,CAAC,EAAE,MAAM,CAAC;IACZ,EAAE,CAAC,EAAE,MAAM,CAAC;IACZ,IAAI,CAAC,EAAE,KAAK,CAAC;CACd,GACD;IACE,EAAE,CAAC,EAAE,KAAK,CAAC;IACX,EAAE,CAAC,EAAE,KAAK,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;CACd,CAAC;AAEN;;;GAGG;AACH;IACE;;;OAGG;IACH,IAAI,CAAC,EAAE,iCAAiC,GAAG,MAAM,CAAC;IAElD;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,UAAU,CAAC,EAAE,MAAM,CAAC;IAEpB;;OAEG;IACH,QAAQ,CAAC,EAAE,OAAO,CAAC;IAEnB;;OAEG;IACH,MAAM,CAAC,EAAE,2BAA2B,CAAC;IAErC;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE1B;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB;AC/DD;;;GAGG;AACH;IACE;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IAEnB;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;OAEG;IACH,MAAM,CAAC,EAAE,OAAO,CAAC;IAEjB;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE1B;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB;ACxCD,wCAA+C;IAC7C,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,MAAM,CAAC;IACjB,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;IACvB,WAAW,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;CAClC,CAAC;ACRF;;GAEG;AACH,wCAA+C;IAC7C;;OAEG;IACH,IAAI,EAAE,MAAM,CAAC;IAEb;;OAEG;IACH,OAAO,EAAE,MAAM,CAAC;IAEhB;;OAEG;IACH,YAAY,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,OAAO,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAE7B;;OAEG;IACH,YAAY,CAAC,EAAE,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAEtD;;OAEG;IACH,WAAW,CAAC,EAAE,gCAAgC,CAAC;IAE/C;;OAEG;IACH,aAAa,CAAC,EAAE,kCAAkC,CAAC;IAEnD;;OAEG;IACH,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB;;OAEG;IACH,SAAS,CAAC,EAAE,kCAAkC,CAAC;IAE/C;;OAEG;IACH,IAAI,CAAC,EAAE,6BAA6B,CAAC;IAErC;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;IAExB;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,CAAC;IAE3B;;OAEG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;IAEvB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB,CAAC;AAEF,iDACE,gCAAgC,GAAG;IACjC;;OAEG;IACH,SAAS,EAAE,MAAM,CAAC;CACnB,CAAC;AAEJ,sDACE,gCAAgC,GAAG;IACjC;;OAEG;IACH,cAAc,EAAE,MAAM,CAAC;CACxB,CAAC;AAEJ;;GAEG;AACH,0CACI,yCAAyC,GACzC,8CAA8C,CAAC;ACrGnD;;GAEG;AACH,0CAAiD;IAC/C;;OAEG;IACH,IAAI,CAAC,EAAE,MAAM,CAAC;IAEd;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;IAEjB;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,OAAO,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;IAE7B;;OAEG;IACH,YAAY,CAAC,EAAE,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAEtD;;OAEG;IACH,WAAW,CAAC,EAAE,gCAAgC,CAAC;IAE/C;;OAEG;IACH,aAAa,CAAC,EAAE,kCAAkC,CAAC;IAEnD;;OAEG;IACH,MAAM,CAAC,EAAE,MAAM,CAAC;IAEhB;;OAEG;IACH,SAAS,CAAC,EAAE,kCAAkC,CAAC;IAE/C;;OAEG;IACH,IAAI,CAAC,EAAE,6BAA6B,CAAC;IAErC;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;OAEG;IACH,cAAc,CAAC,EAAE,MAAM,CAAC;IAExB;;OAEG;IACH,iBAAiB,CAAC,EAAE,MAAM,CAAC;IAE3B;;OAEG;IACH,YAAY,CAAC,EAAE,OAAO,CAAC;IAEvB;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,CAAC;CAClB,CAAC;ACrFF;IACE,OAAO,CAAC,EAAE,MAAM,CAAC;IACjB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC1B,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB;ACLD;IACE;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;MAEE;IACF,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;IAEf;;KAEC;IACD,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAE1B;;OAEG;IACH,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB;AC5BD;IACE;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,MAAM,CAAC,EAAE,OAAO,CAAC;IAEjB;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,IAAI,CAAC,EAAE;QAAE,IAAI,EAAE,MAAM,CAAA;KAAE,GAAG,MAAM,CAAC;IAEjC;;OAEG;IACH,MAAM,CAAC,EAAE,QAAQ,GAAG,UAAU,CAAC;IAE/B;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;CAChB;ACnCD;IACE;;OAEG;IACH,aAAa,CAAC,EAAE,MAAM,CAAC;IAEvB;;OAEG;IACH,WAAW,CAAC,EAAE,MAAM,CAAC;IAErB;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,IAAI,CAAC,EAAE;QAAE,IAAI,EAAE,MAAM,CAAA;KAAE,GAAG,MAAM,CAAC;IAEjC;;OAEG;IACH,QAAQ,CAAC,EAAE,MAAM,CAAC;IAElB;;OAEG;IACH,KAAK,CAAC,EAAE,MAAM,CAAC;CAChB;AC1BD,gBAAuB,SAAS,GAAG,SAAS,CAAC;AAE7C,8BAA8B;IAC5B,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,KAAK,CAAC,EAAE,MAAM,CAAC;IACf,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB,UAAU,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3B,OAAO,CAAC,EAAE,OAAO,CAAC;IAClB,EAAE,CAAC,EAAE,MAAM,CAAC;IACZ,IAAI,CAAC,EAAE,MAAM,CAAC;IACd,IAAI,CAAC,EAAE,WAAW,CAAC;IACnB,UAAU,CAAC,EAAE,MAAM,CAAC;CACrB,CAAC;AAEF,qCAAqC,sBAAsB,GAAG;IAC5D,QAAQ,CAAC,EAAE,KAAK,CAAC;IACjB,SAAS,CAAC,EAAE,KAAK,CAAC;IAClB,OAAO,CAAC,EAAE,KAAK,CAAC;CACjB,CAAC;AAEF,uCAAuC,sBAAsB,GAAG;IAC9D,QAAQ,CAAC,EAAE,QAAQ,CAAC;IACpB,SAAS,EAAE,MAAM,GAAG,IAAI,CAAC;IACzB,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB,CAAC;AAEF,qCAAqC,sBAAsB,GAAG;IAC5D,QAAQ,CAAC,EAAE,QAAQ,CAAC;IACpB,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC1B,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC;CACxB,CAAC;AAEF,0BACI,6BAA6B,GAC7B,+BAA+B,GAC/B,6BAA6B,CAAC;ACrClC,4BAAmC;IACjC,eAAe,CAAC,EAAE,MAAM,CAAC;IACzB,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;IAC1B,OAAO,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC;CACzB,CAAC;AC4FF;;;;;;GAMG;AACH;gBAOc,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM;IAO7C;;;;;;;OAOG;IACG,IAAI,CACR,QAAQ,EAAE,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC,EACpD,sBAAsB,CAAC,EAAE,iBAAiB,GACzC,OAAO,CAAC,0BAA0B,CAAC;IA4CtC;;;;OAIG;IACG,OAAO,CACX,OAAO,EAAE,OAAO,EAChB,KAAK,CAAC,EAAE,MAAM,GACb,OAAO,CAAC,yBAAyB,CAAC;IAYrC;;;;;OAKG;IACG,aAAa,CACjB,OAAO,EAAE,OAAO,EAChB,aAAa,EAAE,MAAM,GAAG,IAAI,GAC3B,OAAO,CAAC,oBAAoB,CAAC;IAOhC;;;;;OAKG;IACG,WAAW,CACf,eAAe,CAAC,EAAE,OAAO,EACzB,KAAK,CAAC,EAAE,MAAM,EACd,YAAY,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GACpC,OAAO,CAAC,OAAO,CAAC;IAoBnB;;;;;;OAMG;IACG,kBAAkB,CACtB,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GACjC,OAAO,CAAC,kBAAkB,CAAC;IAY9B;;;OAGG;IACG,SAAS,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAWhE;;;;OAIG;IACG,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,IAAI;IAexD;;;OAGG;IACG,QAAQ,CAAC,OAAO,EAAE,OAAO,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAW/D;;;OAGG;IACG,SAAS,CAAC,IAAI,CAAC,EAAE,gBAAgB;IAoBvC;;;;OAIG;IACG,gBAAgB,CACpB,OAAO,EAAE,OAAO,EAChB,IAAI,CAAC,EAAE,uBAAuB,GAC7B,OAAO,CAAC,mBAAmB,CAAC;IAgB/B;;;;OAIG;IACG,mBAAmB,CACvB,OAAO,EAAE,OAAO,EAChB,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAClC,OAAO,CAAC,2BAA2B,CAAC;IAWvC;;;OAGG;IACG,wBAAwB,CAC5B,OAAO,EAAE,OAAO,GACf,OAAO,CAAC,oBAAoB,CAAC;IAWhC;;;OAGG;IACG,WAAW,CAAC,OAAO,EAAE,OAAO;IAWlC;;;OAGG;IACG,WAAW,CACf,IAAI,CAAC,EAAE,QAAQ,CAAC,kBAAkB,CAAC,GAClC,OAAO,CAAC,mBAAmB,CAAC;IAoB/B;;;;OAIG;IACG,aAAa,CACjB,IAAI,CAAC,EAAE,QAAQ,CAAC,oBAAoB,CAAC,GACpC,OAAO,CAAC,qBAAqB,CAAC;IAoBjC;;;OAGG;IACG,UAAU,IAAI,OAAO,CAAC,kBAAkB,CAAC;IAe/C;;;;;;;OAOG;IACG,UAAU,CACd,QAAQ,EAAE,MAAM,EAChB,QAAQ,EAAE,QAAQ,EAClB,IAAI,CAAC,EAAE,MAAM,EACb,IAAI,CAAC,EAAE,MAAM,GACZ,OAAO,CAAC,kBAAkB,CAAC;IAmB9B;;OAEG;IACG,yBAAyB,IAAI,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAWvE;;;OAGG;IACG,gBAAgB,CACpB,IAAI,CAAC,EAAE,uBAAuB,GAC7B,OAAO,CAAC,gCAAgC,CAAC;IA2B5C;;;OAGG;IACG,eAAe,CAAC,SAAS,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IAY/D;;OAEG;IACG,wBAAwB,CAC5B,IAAI,EAAE,8BAA8B,GACnC,OAAO,CAAC,gCAAgC,CAAC;IAW5C;;;OAGG;IACG,kBAAkB,CACtB,IAAI,EAAE,yBAAyB,GAC9B,OAAO,CAAC,0BAA0B,CAAC;IAWtC;;;OAGG;IACG,kBAAkB,CAAC,SAAS,EAAE,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC;IAQlE;;;OAGG;IACG,yBAAyB,CAC7B,IAAI,CAAC,EAAE,gCAAgC,GACtC,OAAO,CAAC,yCAAyC,CAAC;IA8BrD;;;OAGG;IACG,wBAAwB,CAC5B,UAAU,EAAE,MAAM,GACjB,OAAO,CAAC,qBAAqB,CAAC;IAYjC;;OAEG;IACG,kCAAkC,IAAI,OAAO,CACjD,KAAK,CAAC,6BAA6B,CAAC,CACrC;IAWD;;;;OAIG;IACG,2BAA2B,CAC/B,IAAI,EAAE,kCAAkC,GACvC,OAAO,CAAC,qBAAqB,CAAC;IAcjC;;;OAGG;IACG,sCAAsC,CAC1C,UAAU,EAAE,MAAM,GACjB,OAAO,CAAC,qBAAqB,CAAC;IAajC;;;OAGG;IACG,qCAAqC,CACzC,UAAU,EAAE,MAAM,GACjB,OAAO,CAAC,qBAAqB,CAAC;IAajC;;;;OAIG;IACG,2BAA2B,CAC/B,UAAU,EAAE,MAAM,EAClB,IAAI,EAAE,kCAAkC,GACvC,OAAO,CAAC,qBAAqB,CAAC;IAajC;;;;OAIG;IACG,+BAA+B,CACnC,UAAU,EAAE,MAAM,EAClB,IAAI,EAAE,MAAM,GACX,OAAO,CAAC,qBAAqB,CAAC;IAejC;;;;OAIG;IACG,2BAA2B,CAC/B,UAAU,EAAE,MAAM,GACjB,OAAO,CAAC,qBAAqB,CAAC;IAIjC;;;OAGG;IACG,2BAA2B,CAC/B,UAAU,EAAE,MAAM,GACjB,OAAO,CAAC,qBAAqB,CAAC;IAajC;;;;OAIG;IACG,SAAS,CAAC,IAAI,CAAC,EAAE,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC;IAoBpE;;;;OAIG;IACG,cAAc,CAClB,IAAI,CAAC,EAAE,qBAAqB,GAC3B,OAAO,CAAC,sBAAsB,CAAC;IAoBlC;;;;OAIG;IACG,eAAe,CACnB,IAAI,CAAC,EAAE,sBAAsB,GAC5B,OAAO,CAAC,uBAAuB,CAAC;CAmBpC","sources":["src/src/models/kakao/kakaoButton.ts","src/src/requests/kakao/kakaoOptionRequest.ts","src/src/models/kakao/kakaoOption.ts","src/src/models/rcs/rcsButton.ts","src/src/models/rcs/rcsOption.ts","src/src/types/commonTypes.ts","src/src/responses/messageResponses.ts","src/src/responses/sendManyDetailResponse.ts","src/src/errors/defaultError.ts","src/src/lib/stringDateTrasnfer.ts","src/src/requests/messageRequest.ts","src/src/models/message.ts","src/src/lib/authenticator.ts","src/src/lib/defaultFetcher.ts","src/src/responses/iam/getBlacksResponse.ts","src/src/responses/iam/getBlockGroupsResponse.ts","src/src/responses/iam/getBlockNumbersResponse.ts","src/src/models/kakao/kakaoChannel.ts","src/src/responses/kakao/getKakaoTemplateResponse.ts","src/src/models/kakao/kakaoAlimtalkTemplateQuickReply.ts","src/src/models/kakao/kakaoAlimtalkTemplate.ts","src/src/requests/sendRequestConfig.ts","src/src/responses/kakao/getKakaoAlimtalkTemplatesResponse.ts","src/src/requests/kakao/getKakaoAlimtalkTemplatesRequest.ts","src/src/requests/kakao/getKakaoChannelsRequest.ts","src/src/responses/kakao/getKakaoChannelsResponse.ts","src/src/requests/kakao/createKakaoAlimtalkTemplateRequest.ts","src/src/requests/kakao/updateKakaoAlimtalkTemplateRequest.ts","src/src/requests/messages/groups/getGroupsRequest.ts","src/src/requests/iam/getBlacksRequest.ts","src/src/requests/iam/getBlockGroupsRequest.ts","src/src/requests/iam/getBlockNumbersRequest.ts","src/src/requests/messages/getMessagesRequest.ts","src/src/requests/messages/statistics/getStatisticsRequest.ts","src/src/solapi.ts","src/solapi.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import {Message} from './models/message';\nimport {\n  CreateGroupRequest,\n  CreateKakaoChannelRequest,\n  CreateKakaoChannelTokenRequest,\n  defaultAgent,\n  FileType,\n  FileUploadRequest,\n  GetGroupMessagesRequest,\n  GroupMessageAddRequest,\n  MessageParameter,\n  MultipleDetailMessageSendingRequest,\n  RemoveMessageIdsToGroupRequest,\n  RequestConfig,\n  ScheduledDateSendingRequest,\n  SingleMessageSendingRequest,\n} from './requests/messageRequest';\nimport defaultFetcher from './lib/defaultFetcher';\nimport {\n  AddMessageResponse,\n  CreateKakaoChannelResponse,\n  FileUploadResponse,\n  GetBalanceResponse,\n  GetGroupsResponse,\n  GetMessagesResponse,\n  GetStatisticsResponse,\n  GroupMessageResponse,\n  RemoveGroupMessagesResponse,\n  RequestKakaoChannelTokenResponse,\n  SingleMessageSentResponse,\n} from './responses/messageResponses';\nimport {GetBlacksResponse} from './responses/iam/getBlacksResponse';\nimport {GetBlockGroupsResponse} from './responses/iam/getBlockGroupsResponse';\nimport {GetBlockNumbersResponse} from './responses/iam/getBlockNumbersResponse';\nimport {GroupId} from './types/commonTypes';\nimport {formatISO} from 'date-fns';\nimport ImageToBase64 from 'image-to-base64';\nimport stringDateTransfer from './lib/stringDateTrasnfer';\nimport {BadRequestError, MessageNotReceivedError} from './errors/defaultError';\nimport {\n  KakaoChannel,\n  KakaoChannelCategory,\n  KakaoChannelInterface,\n} from './models/kakao/kakaoChannel';\nimport {\n  KakaoAlimtalkTemplate,\n  KakaoAlimtalkTemplateCategory,\n  KakaoAlimtalkTemplateInterface,\n} from './models/kakao/kakaoAlimtalkTemplate';\nimport qs from 'qs';\nimport {SendRequestConfig} from './requests/sendRequestConfig';\nimport {DetailGroupMessageResponse} from './responses/sendManyDetailResponse';\nimport {GetKakaoTemplateResponse} from './responses/kakao/getKakaoTemplateResponse';\nimport {\n  GetKakaoAlimtalkTemplatesFinalizeResponse,\n  GetKakaoAlimtalkTemplatesResponse,\n} from './responses/kakao/getKakaoAlimtalkTemplatesResponse';\nimport {\n  GetKakaoAlimtalkTemplatesFinalizeRequest,\n  GetKakaoAlimtalkTemplatesRequest,\n} from './requests/kakao/getKakaoAlimtalkTemplatesRequest';\nimport {\n  GetKakaoChannelsFinalizeRequest,\n  GetKakaoChannelsRequest,\n} from './requests/kakao/getKakaoChannelsRequest';\nimport {\n  GetKakaoChannelsFinalizeResponse,\n  GetKakaoChannelsResponse,\n} from './responses/kakao/getKakaoChannelsResponse';\nimport {CreateKakaoAlimtalkTemplateRequest} from './requests/kakao/createKakaoAlimtalkTemplateRequest';\nimport {UpdateKakaoAlimtalkTemplateRequest} from './requests/kakao/updateKakaoAlimtalkTemplateRequest';\nimport {\n  GetGroupsFinalizeRequest,\n  GetGroupsRequest,\n} from './requests/messages/groups/getGroupsRequest';\nimport {\n  GetBlacksFinalizeRequest,\n  GetBlacksRequest,\n} from './requests/iam/getBlacksRequest';\nimport {\n  GetBlockGroupsFinalizeRequest,\n  GetBlockGroupsRequest,\n} from './requests/iam/getBlockGroupsRequest';\nimport {\n  GetBlockNumbersFinalizeRequest,\n  GetBlockNumbersRequest,\n} from './requests/iam/getBlockNumbersRequest';\nimport {\n  GetMessagesRequest,\n  GetMessagesFinalizeRequest,\n} from './requests/messages/getMessagesRequest';\nimport {\n  GetStatisticsFinalizeRequest,\n  GetStatisticsRequest,\n} from './requests/messages/statistics/getStatisticsRequest';\n\nexport * from './errors/defaultError';\n\n/**\n * SOLAPI 메시지 서비스\n * 발송 및 조회 등 SOLAPI에서 제공되는 여러 API의 기능을 쉽게 사용할 수 있습니다.\n * SOLAPI 자체의 서비스에 관한 사항은 SOLAPI 홈페이지를 참고해주세요.\n * @see https://solapi.github.io/solapi-nodejs\n * @see https://developers.solapi.com/category/nodejs\n */\nexport class SolapiMessageService {\n  private readonly baseUrl = 'https://api.solapi.com';\n  private readonly authInfo: {\n    apiKey: string;\n    apiSecret: string;\n  };\n\n  constructor(apiKey: string, apiSecret: string) {\n    this.authInfo = {\n      apiKey,\n      apiSecret,\n    };\n  }\n\n  /**\n   * 메시지 발송 기능, sendMany 함수보다 개선된 오류 표시 기능등을 제공합니다.\n   * 한번의 요청으로 최대 10,000건까지 발송할 수 있습니다.\n   * @param messages 발송 요청할 메시지 파라미터(문자, 알림톡 등)\n   * @param requestConfigParameter request시 필요한 파라미터 오브젝트\n   * @throws MessageNotReceivedError 모든 메시지 접수건이 실패건으로 진행되는 경우 반환되는 에러\n   * @throws BadRequestError 잘못된 파라미터를 기입했거나, 데이터가 아예 없는 경우 반환되는 에러\n   */\n  async send(\n    messages: MessageParameter | Array<MessageParameter>,\n    requestConfigParameter?: SendRequestConfig,\n  ): Promise<DetailGroupMessageResponse> {\n    const payload: Array<Message> = [];\n    if (Array.isArray(messages)) {\n      messages.forEach(value => {\n        payload.push(new Message(value));\n      });\n    } else if (!Array.isArray(messages)) {\n      payload.push(new Message(messages));\n    } else {\n      throw new BadRequestError('잘못된 값이 입력되었습니다.');\n    }\n    if (payload.length === 0) {\n      throw new BadRequestError(\n        '데이터가 반드시 1건 이상 기입되어 있어야 합니다.',\n      );\n    }\n    const parameter = new MultipleDetailMessageSendingRequest(\n      payload,\n      requestConfigParameter?.allowDuplicates,\n      requestConfigParameter?.appId,\n      requestConfigParameter?.scheduledDate,\n      requestConfigParameter?.showMessageList,\n    );\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/messages/v4/send-many/detail`,\n    };\n    return defaultFetcher<\n      MultipleDetailMessageSendingRequest,\n      DetailGroupMessageResponse\n    >(this.authInfo, requestConfig, parameter).then(\n      (res: DetailGroupMessageResponse) => {\n        const count = res.groupInfo.count;\n        if (\n          res.failedMessageList.length > 0 &&\n          count.total === count.registeredFailed\n        ) {\n          throw new MessageNotReceivedError(res.failedMessageList);\n        }\n        return res;\n      },\n    );\n  }\n\n  /**\n   * 단일 메시지 발송 기능\n   * @param message 메시지(문자, 알림톡 등)\n   * @param appId appstore용 app id\n   */\n  async sendOne(\n    message: Message,\n    appId?: string,\n  ): Promise<SingleMessageSentResponse> {\n    const parameter = new SingleMessageSendingRequest(message, false, appId);\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/messages/v4/send`,\n    };\n    return defaultFetcher<\n      SingleMessageSendingRequest,\n      SingleMessageSentResponse\n    >(this.authInfo, requestConfig, parameter);\n  }\n\n  /**\n   * 단일 메시지 예약 발송 기능\n   * @deprecated 해당 함수는 더이상 지원하지 않습니다, send 메소드를 사용하세요!\n   * @param message 메시지(문자, 알림톡 등)\n   * @param scheduledDate 예약일시\n   */\n  async sendOneFuture(\n    message: Message,\n    scheduledDate: string | Date,\n  ): Promise<GroupMessageResponse> {\n    const groupId = await this.createGroup();\n    await this.addMessagesToGroup(groupId, [message]);\n    scheduledDate = stringDateTransfer(scheduledDate);\n    return this.reserveGroup(groupId, scheduledDate);\n  }\n\n  /**\n   * 그룹 생성\n   * @param allowDuplicates 생성할 그룹이 중복 수신번호를 허용하는지 여부를 확인합니다.\n   * @param appId 생성할 그룹에 특정 appId를 넣을 수 있습니다.\n   * @param customFields 생성할 그룹에 사용자 정의 데이터를 Record 형태로 삽입할 수 있습니다.\n   */\n  async createGroup(\n    allowDuplicates?: boolean,\n    appId?: string,\n    customFields?: Record<string, string>,\n  ): Promise<GroupId> {\n    allowDuplicates = allowDuplicates ?? false;\n    const {sdkVersion, osPlatform} = defaultAgent;\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/messages/v4/groups`,\n    };\n    return defaultFetcher<CreateGroupRequest, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n      {\n        sdkVersion,\n        osPlatform,\n        allowDuplicates,\n        appId,\n        customFields,\n      },\n    ).then(res => res.groupId);\n  }\n\n  /**\n   * 그룹 메시지 추가\n   * 한번 요청으로 최대 10,000건의 메시지를 추가할 수 있습니다.\n   * 추가 가능한 최대 메시지 건 수는 1,000,000건 입니다.\n   * @param groupId 생성 된 Group ID\n   * @param messages 여러 메시지(문자, 알림톡 등)\n   */\n  async addMessagesToGroup(\n    groupId: GroupId,\n    messages: Required<Array<Message>>,\n  ): Promise<AddMessageResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'PUT',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}/messages`,\n    };\n    return defaultFetcher<GroupMessageAddRequest, AddMessageResponse>(\n      this.authInfo,\n      requestConfig,\n      new GroupMessageAddRequest(messages),\n    );\n  }\n\n  /**\n   * 그룹 메시지 전송 요청\n   * @param groupId 생성 된 Group ID\n   */\n  async sendGroup(groupId: GroupId): Promise<GroupMessageResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}/send`,\n    };\n    return defaultFetcher<never, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 그룹 예약 발송 설정\n   * @param groupId 생성 된 Group ID\n   * @param scheduledDate 예약발송 할 날짜\n   */\n  async reserveGroup(groupId: GroupId, scheduledDate: Date) {\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}/schedule`,\n    };\n    const formattedScheduledDate = formatISO(scheduledDate);\n    return defaultFetcher<ScheduledDateSendingRequest, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n      {\n        scheduledDate: formattedScheduledDate,\n      },\n    );\n  }\n\n  /**\n   * 단일 그룹정보 조회\n   * @param groupId 그룹 ID\n   */\n  async getGroup(groupId: GroupId): Promise<GroupMessageResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}`,\n    };\n    return defaultFetcher<never, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 그룹 목록 정보 조회\n   * @param data 그룹 정보 상세 조회용 request 데이터\n   */\n  async getGroups(data?: GetGroupsRequest) {\n    let payload: GetGroupsFinalizeRequest = {};\n    if (data) {\n      payload = new GetGroupsFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/messages/v4/groups${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetGroupsResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 그룹 내 메시지 목록 조회\n   * @param groupId 생성 된 Group ID\n   * @param data startkey, limit 등 쿼리 조건 파라미터\n   */\n  async getGroupMessages(\n    groupId: GroupId,\n    data?: GetGroupMessagesRequest,\n  ): Promise<GetMessagesResponse> {\n    const parameter = qs.stringify(data, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/messages/v4/groups/${groupId}/messages${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetMessagesResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 그룹 내 특정 메시지 삭제\n   * @param groupId 생성 된 Group Id\n   * @param messageIds 생성 된 메시지 ID 목록\n   */\n  async removeGroupMessages(\n    groupId: GroupId,\n    messageIds: Required<Array<string>>,\n  ): Promise<RemoveGroupMessagesResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'DELETE',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}/messages`,\n    };\n    return defaultFetcher<\n      RemoveMessageIdsToGroupRequest,\n      RemoveGroupMessagesResponse\n    >(this.authInfo, requestConfig, {messageIds});\n  }\n\n  /**\n   * 그룹 내 예약 발송 취소(메시지 실패 전체 처리 됨)\n   * @param groupId 생성 된 Group ID\n   */\n  async removeReservationToGroup(\n    groupId: GroupId,\n  ): Promise<GroupMessageResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'DELETE',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}/schedule`,\n    };\n    return defaultFetcher<never, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 그룹 삭제\n   * @param groupId\n   */\n  async removeGroup(groupId: GroupId) {\n    const requestConfig: RequestConfig = {\n      method: 'DELETE',\n      url: `${this.baseUrl}/messages/v4/groups/${groupId}`,\n    };\n    return defaultFetcher<never, GroupMessageResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 메시지 목록 조회\n   * @param data 목록 조회 상세조건 파라미터\n   */\n  async getMessages(\n    data?: Readonly<GetMessagesRequest>,\n  ): Promise<GetMessagesResponse> {\n    let payload: GetMessagesFinalizeRequest = {};\n    if (data) {\n      payload = new GetMessagesFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/messages/v4/list${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetMessagesResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 통계 조회\n   * @param data 통계 상세 조건 파라미터\n   * @returns GetStatisticsResponse 통계 결과\n   */\n  async getStatistics(\n    data?: Readonly<GetStatisticsRequest>,\n  ): Promise<GetStatisticsResponse> {\n    let payload: GetStatisticsFinalizeRequest = {};\n    if (data) {\n      payload = new GetStatisticsFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/messages/v4/statistics${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetStatisticsResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 잔액조회\n   * @returns GetBalanceResponse\n   */\n  async getBalance(): Promise<GetBalanceResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/cash/v1/balance`,\n    };\n    const response = await defaultFetcher<never, GetBalanceResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n    return {\n      balance: response.balance,\n      point: response.point,\n    };\n  }\n\n  /**\n   * 파일(이미지) 업로드\n   * 카카오 친구톡 이미지는 500kb, MMS는 200kb, 발신번호 서류 인증용 파일은 2mb의 제한이 있음\n   * @param filePath 해당 파일의 경로 또는 접근 가능한 이미지 URL\n   * @param fileType 저장할 파일의 유형, 예) 카카오 친구톡 용 이미지 -> KAKAO, MMS용 사진 -> MMS, 발신번호 서류 인증에 쓰이는 문서 등 -> DOCUMENT, RCS 이미지 -> RCS\n   * @param name 파일 이름\n   * @param link 파일 링크, 친구톡의 경우 필수 값\n   */\n  async uploadFile(\n    filePath: string,\n    fileType: FileType,\n    name?: string,\n    link?: string,\n  ): Promise<FileUploadResponse> {\n    const encodedFile = await ImageToBase64(filePath);\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/storage/v1/files`,\n    };\n    const parameter: FileUploadRequest = {\n      file: encodedFile,\n      type: fileType,\n      name,\n      link,\n    };\n    return defaultFetcher<FileUploadRequest, FileUploadResponse>(\n      this.authInfo,\n      requestConfig,\n      parameter,\n    );\n  }\n\n  /**\n   * 카카오 채널 카테고리 조회\n   */\n  async getKakaoChannelCategories(): Promise<Array<KakaoChannelCategory>> {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/kakao/v2/channels/categories`,\n    };\n    return defaultFetcher<never, Array<KakaoChannelCategory>>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 카카오 채널 목록 조회\n   * @param data 카카오 채널 목록을 더 자세하게 조회할 때 필요한 파라미터\n   */\n  async getKakaoChannels(\n    data?: GetKakaoChannelsRequest,\n  ): Promise<GetKakaoChannelsFinalizeResponse> {\n    let payload: GetKakaoChannelsFinalizeRequest = {};\n    if (data) {\n      payload = new GetKakaoChannelsFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {indices: false});\n    const endpoint = `${this.baseUrl}/kakao/v2/channels?${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    const response = await defaultFetcher<never, GetKakaoChannelsResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n    const channelList = new Array<KakaoChannel>();\n    for (const channel of response.channelList) {\n      channelList.push(new KakaoChannel(channel));\n    }\n    return {\n      limit: response.limit,\n      nextKey: response.nextKey,\n      startKey: response.startKey,\n      channelList,\n    };\n  }\n\n  /**\n   * @description 카카오 채널 조회\n   * @param channelId 카카오 채널 ID(구 pfId)\n   */\n  async getKakaoChannel(channelId: string): Promise<KakaoChannel> {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/kakao/v2/channels/${channelId}`,\n    };\n    const response = await defaultFetcher<never, KakaoChannelInterface>(\n      this.authInfo,\n      requestConfig,\n    );\n    return new KakaoChannel(response);\n  }\n\n  /**\n   * @description 카카오 채널 연동을 위한 인증 토큰 요청\n   */\n  async requestKakaoChannelToken(\n    data: CreateKakaoChannelTokenRequest,\n  ): Promise<RequestKakaoChannelTokenResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/kakao/v2/channels/token`,\n    };\n    return defaultFetcher<\n      CreateKakaoChannelTokenRequest,\n      RequestKakaoChannelTokenResponse\n    >(this.authInfo, requestConfig, data);\n  }\n\n  /**\n   * @description 카카오 채널 연동 메소드\n   * getKakaoChannelCategories, requestKakaoChannelToken 메소드를 선행적으로 호출해야 합니다!\n   */\n  async createKakaoChannel(\n    data: CreateKakaoChannelRequest,\n  ): Promise<CreateKakaoChannelResponse> {\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/kakao/v2/channels`,\n    };\n    return defaultFetcher<\n      CreateKakaoChannelRequest,\n      CreateKakaoChannelResponse\n    >(this.authInfo, requestConfig, data);\n  }\n\n  /**\n   * @description 카카오 채널 삭제, 채널이 삭제 될 경우 해당 채널의 템플릿이 모두 삭제됩니다!\n   * @param channelId 카카오 채널 ID\n   */\n  async removeKakaoChannel(channelId: string): Promise<KakaoChannel> {\n    const requestConfig: RequestConfig = {\n      method: 'DELETE',\n      url: `${this.baseUrl}/kakao/v2/channels/${channelId}`,\n    };\n    return defaultFetcher<never, KakaoChannel>(this.authInfo, requestConfig);\n  }\n\n  /**\n   * 카카오 템플릿 목록 조회\n   * @param data 카카오 템플릿 목록을 더 자세하게 조회할 때 필요한 파라미터\n   */\n  async getKakaoAlimtalkTemplates(\n    data?: GetKakaoAlimtalkTemplatesRequest,\n  ): Promise<GetKakaoAlimtalkTemplatesFinalizeResponse> {\n    let payload: GetKakaoAlimtalkTemplatesFinalizeRequest = {};\n    if (data) {\n      payload = new GetKakaoAlimtalkTemplatesFinalizeRequest(data);\n    }\n\n    const parameter = qs.stringify(payload, {indices: false});\n    const endpoint = `${this.baseUrl}/kakao/v2/templates?${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    const response = await defaultFetcher<\n      never,\n      GetKakaoAlimtalkTemplatesResponse\n    >(this.authInfo, requestConfig);\n\n    const templateList = new Array<KakaoAlimtalkTemplate>();\n    for (const template of response.templateList) {\n      templateList.push(new KakaoAlimtalkTemplate(template));\n    }\n\n    return {\n      limit: response.limit,\n      nextKey: response.nextKey,\n      startKey: response.startKey,\n      templateList,\n    };\n  }\n\n  /**\n   * 카카오 템플릿 상세 조회\n   * @param templateId 카카오 알림톡 템플릿 ID\n   */\n  async getKakaoAlimtalkTemplate(\n    templateId: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}`,\n    };\n    const response = await defaultFetcher<never, GetKakaoTemplateResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 카카오 템플릿 카테고리 조회\n   */\n  async getKakaoAlimtalkTemplateCategories(): Promise<\n    Array<KakaoAlimtalkTemplateCategory>\n  > {\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: `${this.baseUrl}/kakao/v2/templates/categories`,\n    };\n    return defaultFetcher<never, Array<KakaoAlimtalkTemplateCategory>>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * @description 카카오 알림톡 템플릿 생성\n   * 반드시 getKakaoAlimtalkTemplateCategories를 먼저 호출하여 카테고리 값을 확인해야 합니다!\n   * @param data 알림톡 템플릿 생성을 위한 파라미터\n   */\n  async createKakaoAlimtalkTemplate(\n    data: CreateKakaoAlimtalkTemplateRequest,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'POST',\n      url: `${this.baseUrl}/kakao/v2/templates`,\n    };\n\n    const response = await defaultFetcher<\n      CreateKakaoAlimtalkTemplateRequest,\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig, data);\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 카카오 알림톡 템플릿 검수 요청\n   * @param templateId 카카오 알림톡 템플릿 ID\n   */\n  async requestInspectionKakaoAlimtalkTemplate(\n    templateId: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'PUT',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}/inspection`,\n    };\n    const response = await defaultFetcher<\n      never,\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig);\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 카카오 알림톡 템플릿 검수 취소 요청\n   * @param templateId 카카오 알림톡 템플릿 ID\n   */\n  async cancelInspectionKakaoAlimtalkTemplate(\n    templateId: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'PUT',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}/inspection/cancel`,\n    };\n    const response = await defaultFetcher<\n      never,\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig);\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 카카오 알림톡 템플릿 수정(검수 X)\n   * @param templateId 카카오 알림톡 템플릿 ID\n   * @param data 카카오 알림톡 템플릿 수정을 위한 파라미터\n   */\n  async updateKakaoAlimtalkTemplate(\n    templateId: string,\n    data: UpdateKakaoAlimtalkTemplateRequest,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'PUT',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}`,\n    };\n    const response = await defaultFetcher<\n      UpdateKakaoAlimtalkTemplateRequest,\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig, data);\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 카카오 알림톡 템플릿 이름 수정(검수 상태 상관없이 변경가능)\n   * @param templateId 카카오 알림톡 템플릿 ID\n   * @param name 카카오 알림톡 템플릿 이름 변경을 위한 파라미터\n   */\n  async updateKakaoAlimtalkTemplateName(\n    templateId: string,\n    name: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'PUT',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}/name`,\n    };\n    const response = await defaultFetcher<\n      {\n        name: string;\n      },\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig, {name});\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * @deprecated 해당 메소드는 더이상 사용되지 않습니다. removeKakaoAlimtalkTemplate를 이용해주세요!\n   * 카카오 알림톡 템플릿 삭제(대기, 반려 상태일 때만 삭제가능)\n   * @param templateId 카카오 알림톡 템플릿 ID\n   */\n  async deleteKakaoAlimtalkTemplate(\n    templateId: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    return this.removeKakaoAlimtalkTemplate(templateId);\n  }\n\n  /**\n   * 카카오 알림톡 템플릿 삭제(대기, 반려 상태일 때만 삭제가능)\n   * @param templateId 카카오 알림톡 템플릿 ID\n   */\n  async removeKakaoAlimtalkTemplate(\n    templateId: string,\n  ): Promise<KakaoAlimtalkTemplate> {\n    const requestConfig: RequestConfig = {\n      method: 'DELETE',\n      url: `${this.baseUrl}/kakao/v2/templates/${templateId}`,\n    };\n    const response = await defaultFetcher<\n      never,\n      KakaoAlimtalkTemplateInterface\n    >(this.authInfo, requestConfig);\n\n    return new KakaoAlimtalkTemplate(response);\n  }\n\n  /**\n   * 080 수신 거부 조회\n   * @param data 080 수신 거부 상세 조회용 request 데이터\n   * @returns GetBlacksResponse\n   */\n  async getBlacks(data?: GetBlacksRequest): Promise<GetBlacksResponse> {\n    let payload: GetBlacksFinalizeRequest = {type: 'DENIAL'};\n    if (data) {\n      payload = new GetBlacksFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/iam/v1/black${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetBlacksResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 수신 거부 그룹 조회\n   * @param data 수신 거부 그룹 조회용 request 데이터\n   * @returns GetBlockGroupsResponse\n   */\n  async getBlockGroups(\n    data?: GetBlockGroupsRequest,\n  ): Promise<GetBlockGroupsResponse> {\n    let payload: GetBlockGroupsFinalizeRequest = {};\n    if (data) {\n      payload = new GetBlockGroupsFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/iam/v1/block/groups${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetBlockGroupsResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n\n  /**\n   * 수신 차단 그룹 별 수신번호 조회\n   * @param data 수신 거부 그룹 별 수신번호 조회용 request 데이터\n   * @returns GetBlockNumbersResponse\n   */\n  async getBlockNumbers(\n    data?: GetBlockNumbersRequest,\n  ): Promise<GetBlockNumbersResponse> {\n    let payload: GetBlockNumbersFinalizeRequest = {};\n    if (data) {\n      payload = new GetBlockNumbersFinalizeRequest(data);\n    }\n    const parameter = qs.stringify(payload, {\n      indices: false,\n      addQueryPrefix: true,\n    });\n    const endpoint = `${this.baseUrl}/iam/v1/block/numbers${parameter}`;\n    const requestConfig: RequestConfig = {\n      method: 'GET',\n      url: endpoint,\n    };\n    return defaultFetcher<never, GetBlockNumbersResponse>(\n      this.authInfo,\n      requestConfig,\n    );\n  }\n}\n"],"names":[],"version":3,"file":"index.d.ts.map","sourceRoot":"../"}